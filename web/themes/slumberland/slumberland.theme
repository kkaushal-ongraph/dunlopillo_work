<?php

/**
 * Implements hook_preprocess_node().
 *
 * @param array $variables
 */
function slumberland_preprocess_node(&$variables) {
  $node = $variables['node'];
  $variables['img'] = $variables['node']->get('field_banner_image')->view('full');
  $variables['bannerText'] = $variables['node']->get('field_banner_text')->getValue();
  $variables['best'] = $variables['node']->get('field_banner_detail_1')->view('full');
  
  if ($node->bundle() === 'article') {
    $terms = $node->get('field_tags')->referencedEntities();
    $featured = $node->get('field_top_read')->getValue();

    $tags = [];
    foreach ($terms as $term) {
      $tags[] = $term->label();
    }

    if ($featured[0]['value'] === '1') {
      array_unshift($tags, 'Featured');
    }

    $variables['tags'] = $tags;
   
  }
}

/**
 * Implements hook_theme_suggestions_taxonomy_term_alter().
 *
 * @param array $suggestions
 * @param array $variables
 */
function slumberland_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {
  $term = $variables['elements']['#taxonomy_term'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  // Add view mode theme suggestions.
  $suggestions[] = 'taxonomy_term__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->id() . '__' . $sanitized_view_mode;
}

/**
 * Implements hook_preprocess_taxonomy_term().
 *
 * @param array $variables
 */
function slumberland_preprocess_taxonomy_term(&$variables) {
  $term = $variables['elements']['#taxonomy_term'];

  if ($term->bundle() == "store") {

    if ($term->get('field_customer_group')->first()) {
      $entity_reference = $term->get('field_customer_group')
        ->first()
        ->get('entity');
      $customer_group = $entity_reference->getTarget()->getValue();
      $variables['customer_group'] = $customer_group;
    }

    $models = $term->get('field_models_stocked')->getValue();
    $variables['store_model_total'] = count($models);
  }

}

function slumberland_preprocess_page(&$variables) {

  $variables['test'] = 'I am On';
}
